# Last edit on 2014-11-27 
# This file is a part of my zsh configuration. It's sourced from the .zshrc
# file. It contains my key bindings

bindkey -v  #vi keybindings

autoload -U history-search-end
# History completion on pgup and pgdown
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
typeset -g -A key

if [[ -f /etc/fedora-release ]] ; then
	key[F1]='^[OP'
	key[F2]='^[OQ'
	key[F3]='^[OR'
	key[F4]='^[OS'
	key[F5]='^[[15~'
	key[F6]='^[[17~'
	key[F7]='^[[18~'
	key[F8]='^[[19~'
	key[F9]='^[[20~'
	key[F10]='^[[21~'
	key[F11]='^[[23~'
	key[F12]='^[[24~'
	key[Backspace]='^?'
	key[Insert]='^[[2~'
	key[PageUp]='^[[5~'
	key[Delete]='^[[3~'
	key[PageDown]='^[[6~'
    if [ "$TERM" = "screen-256color" ]; then
		key[Home]='^[[1~'
		key[End]='^[[4~'
		key[Up]='^[OA'
		key[Left]='^[OD'
		key[Down]='^[OB'
		key[Right]='^[OC'
    elif [ "$TERM" = "xterm-256color" ]; then
		key[Home]='^[[H'
		key[End]='^[[F'
		key[Up]='^[[A'
		key[Left]='^[[D'
		key[Down]='^[[B'
		key[Right]='^[[C'
    fi
else 
    key[Home]=${terminfo[khome]}
    key[End]=${terminfo[kend]}
    key[Insert]=${terminfo[kich1]}
    key[Delete]=${terminfo[kdch1]}
    key[Up]=${terminfo[kcuu1]}
    key[Down]=${terminfo[kcud1]}
    key[Left]=${terminfo[kcub1]}
    key[Right]=${terminfo[kcuf1]}
    key[PageUp]=${terminfo[kpp]}
    key[PageDown]=${terminfo[knp]}
    key[Enter]=${terminfo[kent]}

fi
function setup-key(){
	[[ -n "$1" ]] && bindkey "$1" $2 && bindkey  -M afu "$1" "$2"
}
setup-key $key[Home]    beginning-of-line
setup-key $key[End]     end-of-line
setup-key $key[Insert]  overwrite-mode
setup-key $key[PageUp]  history-beginning-search-backward-end
setup-key $key[PageDown]  history-beginning-search-forward-end
setup-key $key[Delete]  delete-char
#setup-key $key[Enter]  accept-line
setup-key $key[Up]      up-line-or-history
setup-key $key[Down]    down-line-or-history
setup-key $key[Left]    backward-char
setup-key $key[Right]   forward-char

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
function zle-line-init () {
    auto-fu-init;
}

setup-key "^u" insert-last-word 
bindkey "^W" backward-delete-word
bindkey -s "\C-t" "dirs -v\r" 

run-with-sudo () { LBUFFER="sudo $LBUFFER" }
zle -N run-with-sudo
bindkey '^N' run-with-sudo

# press esc-e for editing command line in $EDITOR or $VISUAL
if  zle -N edit-command-line ; then
    bindkey '\ee' edit-command-line
fi

# press "ctrl-e d" to insert the actual date in the form yyyy-mm-dd
_bkdate() { BUFFER="$BUFFER$(today)"; CURSOR=$#BUFFER; }
zle -N _bkdate
bindkey '^Ed' _bkdate

#Shortcut for \kbd{fg<enter>}
bindkey -s '^z' " &\n"

# Auto quote pasted urls
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic
autoload -Uz bracketed-paste-magic
zle -N bracketed-paste bracketed-paste-magic
#autoload -Uz predict-on && predict-on

setup-key $key[F1] run-help
bindkey -M vicmd "K" run-help


# MISC : If command line empty show bookmarks, else bookmark command
function zaw-bookmark-wrapper() {
    if [ "$BUFFER" = "" ]; then
         zaw-bookmark
    else
        zaw-bookmark-add-buffer
    fi
}

zle -N zaw-bookmark-wrapper
setup-key "^A"  zaw-bookmark-wrapper

bindkey ' ' magic-space  # also do history expansion on space

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=13'
bindkey '^f' vi-forward-blank-word
bindkey '^g' end-of-line

zle -N zle-line-init

zstyle ':completion:*' completer _oldlist _complete
zle -N zle-keymap-select auto-fu-zle-keymap-select

setup-key "^X" zaw
setup-key $key[F2]  zaw-zsh-config
setup-key $key[F12] zaw-process
setup-key "^ " zaw-dirs
setup-key "^r" zaw-history
setup-key "^o"  zaw-command-output
setup-key "^P" zaw-applications

setup-key "^j" history-beginning-search-backward-end
setup-key "^k"   history-beginning-search-forward-end

